{% extends '/common/base.html.twig' %}

{% block title %}Mapa{% endblock %}

{% block head %}


    <link rel="stylesheet" href="http://openlayers.org/en/v3.10.1/css/ol.css" type="text/css">
    <style>
        .map {
            height: 600px;
            width: 100%;
        }
    </style>
    <script src="http://openlayers.org/en/v3.10.1/build/ol.js" type="text/javascript"></script>
    {{ parent() }}
{% endblock %}

{% block body %}
    {{ parent() }}

    <div class="container" id="container">
        <h1>holis</h1>
        <div id="map" class="map"></div>

        <label class="checkbox" for="track">
            <input id="track" type="checkbox">track position </input>
        </label>
        <script type="text/javascript">

            var vectorSource = new ol.source.Vector({
                //create empty vector
            });

            var view = new ol.View({
                center: ol.proj.transform([-57.9749, -34.9205], 'EPSG:4326', 'EPSG:3857'),
                zoom: 13

            });
            //create a bunch of icons and add to source vector//-6451361.423378526, -4153081.947043341
            var iconFeature = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.transform([-57.9749, -34.9205], 'EPSG:4326',   'EPSG:3857')),
                name: 'Alumno '
            });


            vectorSource.addFeature(iconFeature);



            //create the style
            var iconStyle = new ol.style.Style({
                image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
                    anchor: [0.5, 46],
                    anchorXUnits: 'fraction',
                    anchorYUnits: 'pixels',
                    opacity: 0.75,
                    src: '/dot.png'
                }))
            });



            //add the feature vector to the layer vector, and apply a style to whole layer
            var vectorLayer = new ol.layer.Vector({
                source: vectorSource,
                style: iconStyle
            });

            var map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.MapQuest({layer: 'osm'})
                    }), vectorLayer
                ],
                view: view
            });

            function el(id) {
                return document.getElementById(id);
            }

            el('track').addEventListener('change', function() {
                geolocation.setTracking(this.checked);
            });

            var geolocation = new ol.Geolocation({
                projection: view.getProjection()
            });

            var positionFeature = new ol.Feature();

            positionFeature.setStyle(new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 6,
                    fill: new ol.style.Fill({
                        color: '#3399CC'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#fff',
                        width: 2
                    })
                })
            }));

            geolocation.on('change:position', function() {
                var coordinates = geolocation.getPosition();
                positionFeature.setGeometry(coordinates ? new ol.geom.Point(coordinates) : null);
            });

            geolocation.on('change', function(evt) {
                window.console.log(geolocation.getPosition());
            });
            var featuresOverlay = new ol.layer.Vector({
                map: map,
                source: new ol.source.Vector({
                    features: [ positionFeature]
                })
            });


        </script>
    </div>


{% endblock %}
