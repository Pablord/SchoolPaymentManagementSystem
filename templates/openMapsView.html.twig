{% extends '/common/base.html.twig' %}

{% block title %}Mapa{% endblock %}

{% block head %}


    <link rel="stylesheet" href="http://openlayers.org/en/v3.10.1/css/ol.css" type="text/css">
    <style>
        .map {
            height: 600px;
            width: 100%;
        }
    </style>
    <script src="http://openlayers.org/en/v3.10.1/build/ol.js" type="text/javascript"></script>
    {{ parent() }}
{% endblock %}

{% block body %}
    {{ parent() }}

    <div class="container" id="container">
        <h1>holis</h1>
        <div id="map" class="map"></div>

        <label class="checkbox" for="track">
            <input id="track" type="checkbox">track position </input>
        </label>
        <script type="text/javascript">



            var view = new ol.View({
                center: ol.proj.transform([-57.9749, -34.9205], 'EPSG:4326', 'EPSG:3857'),
                zoom: 13

            });

            document.getElementById('track').addEventListener('change', function() {
                geolocation.setTracking(this.checked);
            });

            var geolocation = new ol.Geolocation({
                projection: view.getProjection()
            });

            var features = [];

            var currentLocationFeature = getPrefabFeature('#3399CC');
            features.push(currentLocationFeature);

            geolocation.on('change:position', function() {
                var coordinates = geolocation.getPosition();
                currentLocationFeature.setGeometry(coordinates ? new ol.geom.Point(coordinates) : null);
            });


            // [-57.9749, -34.9205], [-57.9799, -34.9305]
            var positions = [ ];

            $.ajax({url: "https://grupo_2.proyecto2015.linti.unlp.edu.ar/getUsersPosition", type: 'GET', success: function(result)
            {
                posiciones = JSON.parse(result);

                for ( i= 0; i< posiciones.length; i++)
                {
                    positions.push( [ posiciones[i][0],posiciones[i][1] ] );
                }

                for (i = 0; i < positions.length; i++)
                {
                    var studentFeature = getPrefabFeature('#FF6036');
                    studentFeature.setGeometry(new ol.geom.Point(ol.proj.transform(positions[i], 'EPSG:4326',   'EPSG:3857')));
                    features.push(studentFeature);
                }

                var map = new ol.Map({
                    target: 'map',
                    layers: [
                        new ol.layer.Tile({
                            source: new ol.source.MapQuest({layer: 'osm'})
                        }),
                        new ol.layer.Vector({
                            map: map,
                            source: new ol.source.Vector({
                                features: features})
                        })
                    ],
                    view: view
                });
            }});


























            // retorna un circulo prefabricado para usar de marcador.
            function getPrefabFeature(color)
            {
                var prefabFeature = new ol.Feature();

                prefabFeature.setStyle(new ol.style.Style({
                    image: new ol.style.Circle({
                        radius: 6,
                        fill: new ol.style.Fill({
                            color: color
                        }),
                        stroke: new ol.style.Stroke({
                            color: '#fff',
                            width: 2
                        })
                    })
                }));

                return prefabFeature;
            }

        </script>
    </div>


{% endblock %}
