{% extends '/common/base.html.twig' %}

{% block title %}Mapa{% endblock %}

{% block head %}


    <link rel="stylesheet" href="/css/ol.css" type="text/css">
    <style>
        .map {
            height: 600px;
            width: 100%;
        }
    </style>
    <script src="/js/ol.js" type="text/javascript"></script>
    {{ parent() }}
{% endblock %}

{% block body %}
    {{ parent() }}

    <div class="container" id="container">
        <h1>holis</h1>
        <div id="map" class="map"></div>
        <div id="popup"></div>
        <label class="checkbox" for="track">
            <input id="track" type="checkbox">track position </input>
        </label>

        <table class="table table-striped" id="table">
            <tr class="even">
                <th>
                    Nombre
                </th>
                <th>
                    Apellido
                </th>
                <th>
                    Longitude
                </th>
                <th>
                    Latitude
                </th>

            </tr>
            {% for student in students %}
            <tr class="odd">
                <td>
                    {{ student.firstName }}
                </td>
                <td>
                    {{ student.lastName }}
                </td>
                <td>
                    {{ student.lon }}
                </td>
                <td>
                    {{ student.lat }}
                </td>
            </tr>
            {% endfor %}




        </table>
        <script type="text/javascript">


            var positions = [ ];

            // hay formas mas faciles de hacer esto, pero lo copypastee y anduvo de una asique fue xD
            var table = document.getElementById('table'),
                    rows = table.getElementsByTagName('tr'),
                    i, j, cells;

            for (i = 0, j = rows.length; i < j; ++i) {
                cells = rows[i].getElementsByTagName('td');
                if (cells.length > 0)
                {
                    positions.push([cells[0].innerHTML,[parseFloat(cells[2].innerHTML),parseFloat(cells[3].innerHTML)]]);
                }

            }




            var view = new ol.View({
                center: ol.proj.transform([-57.9749, -34.9205], 'EPSG:4326', 'EPSG:3857'),
                zoom: 13

            });

            document.getElementById('track').addEventListener('change', function() {
                geolocation.setTracking(this.checked);
            });

            var geolocation = new ol.Geolocation({
                projection: view.getProjection()
            });

            var features = [];

            var currentLocationFeature = getPrefabFeature('#3399CC');
            currentLocationFeature.setProperties({'name': 'you'});
            features.push(currentLocationFeature);

            geolocation.on('change:position', function() {
                var coordinates = geolocation.getPosition();
                currentLocationFeature.setGeometry(coordinates ? new ol.geom.Point(coordinates) : null);
            });


            // [-57.9749, -34.9205], [-57.9799, -34.9305]


            for (i = 0; i < positions.length; i++)
            {
                var studentFeature = getPrefabFeature('#FF6036');
                studentFeature.setGeometry(new ol.geom.Point(ol.proj.transform(positions[i][1], 'EPSG:4326',   'EPSG:3857')));
                studentFeature.setProperties({'name': positions[i][0]});
                features.push(studentFeature);
            }

            var map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.MapQuest({layer: 'osm'})
                    }),
                    new ol.layer.Vector({
                        map: map,
                        source: new ol.source.Vector({
                            features: features})
                    })
                ],
                view: view
            });



            // retorna un circulo prefabricado para usar de marcador.
            function getPrefabFeature(color)
            {
                var prefabFeature = new ol.Feature();

                prefabFeature.setStyle(new ol.style.Style({
                    image: new ol.style.Circle({
                        radius: 6,
                        fill: new ol.style.Fill({
                            color: color
                        }),
                        stroke: new ol.style.Stroke({
                            color: '#fff',
                            width: 2
                        })
                    })
                }));

                return prefabFeature;
            }


            var element = document.getElementById('popup');

            var popup = new ol.Overlay({
                element: element,
                positioning: 'bottom-center',
                stopEvent: false
            });
            map.addOverlay(popup);

            // display popup on click
            map.on('pointermove', function(evt)
            {
                var feature = map.forEachFeatureAtPixel(evt.pixel,
                        function(feature, layer) {
                            return feature;
                        });
                if (feature) {
                    var geometry = feature.getGeometry();
                    var coord = geometry.getCoordinates();
                    popup.setPosition(coord);
                    $(element).popover({
                        'placement': 'top',
                        'html': true,
                        'content': feature.get('name')
                    });
                    $(element).popover('show');
                } else {
                    $(element).popover('destroy');
                }
            });



        </script>
    </div>


{% endblock %}
